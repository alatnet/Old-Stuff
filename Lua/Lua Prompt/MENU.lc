MENU = {
  default = {
    col = {
      title = {
        BG = Color.new(192,192,192),
        FG = Color.new(0,0,0)
      },
      body = {
        BG = Color.new(128,128,128),
        FG = Color.new(0,0,0),
        SEL = Color.new(128,0,0)
      }
    },
    title = "Untitled",
    cursor = ">"
  }
}

function MENU.new(options_array,title_txt,cursor_txt,BG1,FG1,BG2,FG2,selcol)
  BG1 = BG1 or MENU.default.col.title.BG
  FG1 = FG1 or MENU.default.col.title.FG
  BG2 = BG2 or MENU.default.col.body.BG
  FG2 = FG2 or MENU.default.col.body.FG
  selcol = selcol or MENU.default.col.body.SEL
  title_txt = title_txt or MENU.default.title
  cursor_txt = cursor_txt or MENU.default.cursor

  local WIDTH = (string.len(title_txt)*8)+8
  local HEIGHT = table.getn(options_array) * 9

  for i=1,table.getn(options_array) do
    if (string.len(options_array[i])*8)+8 > WIDTH then WIDTH = (string.len(options_array[i])*8)+8 end
  end

  local c = setmetatable(
    {
      col = {
        title = {
          BG = BG1,
          FG = FG1
        },
        body = {
          BG = BG2,
          FG = FG2,
          SEL = selcol
        }
      },
      title = title_txt,
      options = options_array,
      cursor = cursor_txt,
      w = WIDTH,
      h = HEIGHT,
      cursor_pos = 1
    },
    {
      __index = MENU
    }
  )

  return c
end

function MENU:menuoption(xpos,ypos,txt,cursor,col,selcol,selcondition,img)
  img = img or screen
  local num_cursor_char = string.len(cursor)
  if selcondition then
    img:print(xpos,ypos,cursor .. txt,selcol)
  else
    img:print(xpos+(8*num_cursor_char),ypos,txt,col)
  end
end

function MENU:list_options(xpos,ypos,options,cursor,col,selcol,cursor_pos,img)
  img = img or screen
  local YY=ypos
  
  for i=1, table.getn(options) do
    self:menuoption(xpos,YY,options[i],cursor,col,selcol,i==cursor_pos,img)
    YY = YY + 9
  end
end

function MENU:width()
  return self.w
end

function MENU:height()
  return self.h
end

function MENU:numOptions()
  return table.getn(self.options)
end

function MENU:moveCursor(direction)
  if string.lower(direction) == "u" then
    self.cursor_pos = self.cursor_pos - 1
    if self.cursor_pos == 0 then self.cursor_pos = self:numOptions() end
  elseif string.lower(direction) == "d" then
    self.cursor_pos = self.cursor_pos + 1
    if self.cursor_pos == self:numOptions() + 1 then self.cursor_pos = 1 end
  end
end

function MENU:CursorPos()
  return self.cursor_pos
end

function MENU:Draw(x,y,c,s)
  s = s or screen
  c = c or self.cursor_pos
  s:fillRect(x, y, self.w, 8, self.col.title.BG)
  s:fillRect(x, y+8, self.w, self.h, self.col.body.BG)
  s:print(x+2,y,self.title,self.col.title.FG)
  self:list_options(x,y+8,self.options,self.cursor,self.col.body.FG,self.col.body.SEL,c,s)
end